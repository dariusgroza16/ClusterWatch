---
- name: Install the K3S Cluster
  hosts: all
  gather_facts: yes
  become: true

  roles:
    - role: docker-install
      tags: [docker-install]

  pre_tasks:
    - name: Ensure ~/.kube directory exists
      command: "mkdir -p ~/.kube"
      delegate_to: localhost

    - name: Ensure ~/.kube directory is empty
      shell: "rm -rf ~/.kube/*"
      delegate_to: localhost


  

- name: Install K3s on Master1 and Retrieve Token
  hosts: master1
  become: true
  tasks:
  # --disable servicelb --docker \
    - name: Install k3s on master1 and disable servicelb, use Docker runtime
      shell: |
        curl -sfL https://get.k3s.io | sh -s - server --cluster-init --tls-san 192.168.1.201 \
        --docker  
#        --disable servicelb --docker \              
#        --node-taint "node-role.kubernetes.io/control-plane=true:NoSchedule"

    - name: Fetch k3s token
      shell: cat /var/lib/rancher/k3s/server/node-token
      register: k3s_token
      changed_when: false

    - name: Store k3s token in hostvars for all hosts
      set_fact:
        k3s_token: "{{ k3s_token.stdout }}"

    - name: Fetch kubeconfig file from master1
      fetch:
        src: /etc/rancher/k3s/k3s.yaml
        dest: /tmp/k3s.yaml
        flat: yes

    - name: Adjust kubeconfig to use external IP of HA Proxy LB
      delegate_to: localhost
      become: false
      lineinfile:
        path: /tmp/k3s.yaml
        regexp: '^\s*server:.*$'
        line: '    server: https://192.168.1.201:6443'

    - name: Move kubeconfig to WSL ~/.kube/k3s.yaml
      delegate_to: localhost
      become: false
      copy:
        src: /tmp/k3s.yaml
        dest: ~/.kube/k3s.yaml
        mode: '0666'

- name: Wait for k3s token to be available
  hosts: master2,master3,worker1,worker2
  tasks:
    - name: Ensure k3s token is available
      wait_for:
        timeout: 10
      when: hostvars['master1'].k3s_token is not defined

- name: Join Additional Master Nodes
  hosts: master2,master3
  become: true
  tasks:
    - name: Install k3s on master nodes
      shell: |
        curl -sfL https://get.k3s.io | sh -s - server --server https://192.168.1.201:6443 \
        --token {{ hostvars['master1']['k3s_token'] }} \
        --docker 
#        --disable servicelb --docker \
#        --node-taint "node-role.kubernetes.io/control-plane=true:NoSchedule"

- name: Join Worker Nodes
  hosts: worker1,worker2,vm01,vm02
  become: true
  tasks:
    - name: Install k3s agent on worker nodes with Docker as container runtime
      shell: |
        curl -sfL https://get.k3s.io | K3S_URL=https://192.168.1.201:6443 \
        K3S_TOKEN={{ hostvars['master1']['k3s_token'] }} sh -s - --docker
